- topic: An introduction to CSC 321
  abbrev: course-intro
  summary: We look at the "big picture" of the course.
  subjects:
    - What is software design?
    - What is CSC 321?
    - What do we learn in this course?
    - Why CSC 321?
    - Course structure

- topic: Getting started with Ruby
  abbrev: intro-ruby
  summary: We start to investigate some issues in Ruby.
  subjects:
    - A brief introduction to Ruby
    - Some exercises

- topic: An introduction to software engineering
  abbrev: intro-softeng
  summary: We consider three models of software engineering and delve more deeply into agile practices
  subjects:
    - Model/View/Controller frameworks
    - RESTful programming
    - Models of software engineering
    - Important agile practices
    - Why agile?
    - Why not agile?

- topic: Ruby, continued
  abbrev: ruby-continued
  summary: We continue to investigate some issues in Ruby.
  subjects:
    - A brief introduction to Ruby
    - Some exercises
    - Interesting characteristics of Ruby
    - Q&A

- topic: Web technologies
  abbrev: web-technologies
  summary: We explore some of the basic technologies associated with the World Wide Web.
  subjects:
    - Web technologies
    - HTML
    - CSS
    - Javascript
    - HTTP

- topic: An introduction to Rails
  abbrev: rails-intro
  summary: We begin to consider the use of Rails
  subjects:
    - Model-View-Controller
    - Making better use of Git
    - Other Rails issues

- topic: Your first database-backed Rails application
  abbrev: toy-app
  summary: We explore the issues in building a database-backed Web application.
  subjects:
    - Model-View-Controller, revisited
    - Convention vs. configuration
    - The components of a Rails application

- topic: A static site
  abbrev: static-site
  summary: We begin to develop a larger Rails application from scratch
  subjects: 
    - Assorted questions

- topic: User stories
  abbrev: user-stories
  read: SaaSbook 7.1-7.5
  summary: We consider user stories, a key mechanism for understanding user requirements that also supports other design and development activities.
  subjects:
    - User stories
    - Format of user stories
    - User stories in testing (aka behavior-drivend esign)
    - User stories in planning

- topic: Extending your Rails application (1)
  abbrev: extending-rails-1
  read: Hartl 5
  subjects:
    - TBD
  summary: We take the first steps in expanding our static site into a more visually appealing and rich site.

- topic: Visits from alumni mentors
  abbrev: alumni
  summary: Our alumni mentors visit the course to discuss big-picture and small-picture issues.
  subjects:
    - Your questions
    - Their answers

- topic: Extending your Rails application (2)
  abbrev: extending-rails-2
  read: Hartl 6
  subjects:
    - TBD
  summary: We continue to expand the capabilities of our sample Web application.

- topic: Modeling relational data in SQL
  abbrev: sql
  summary: We explore what is happening "behind the scenes" in Ruby and see how to model data using SQL.

- topic: Modeling data, continued
  abbrev: modeling-data-continued
  summary: We continue to explore ways to model data and the relationships between data.  (Guest lecture by KY)

- topic: Test-driven development (TDD)
  abbrev: tdd
  read: SaaSbook 8
  summary: We explore a "test-first" approach to developing programs.  (Guest lecture by JDS)

- topic: Project wrapup
  abbrev: project-wrapup
  summary: We conclude our Rails project and debrief on issues we encountered.

- topic: Legacy code and code smells
  abbrev: legacy
  summary: We consider a variety of ways to handle existing code and to identify likely trouble spots.  We also begin to consider ways to address problematic code.
  read: SaaSbook 9, 10.4-10.9

- topic: Refactoring code
  abbrev: refactoring
  summary: We continue to explore ways to address problematic code.
  read: ???

- topic: Design patterns
  abbrev: design-patterns
  summary: We consider some basic issues pertaining to design patterns, a set of guidelines for thinking about software design.
  subjects:
    - Why design patterns?
    - Reading reactions
    - Just enough UML
    - Flyweight
    - Iterator
    - Adaptor
  read: SaaSbook 11

- topic: Design patterns, continued
  abbrev: design-patterns-continued
  summary: We continue to explore design patterns.
  subjects:
    - Dependency injection
    - Observers
    - Factories
    - Strategy
    - Prototype

- topic: Wrapup
  abbrev: wrapup
  summary: We conclude the course.
  subjects:
    - "The subject matter of this course."
    - Evaluations.
    - Debrief.
