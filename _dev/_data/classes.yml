- topic: An introduction to CSC 321
  abbrev: course-intro
  summary: We look at the "big picture" of the course.
  subjects:
    - Guest lecture
    - What is software design?
    - What is CSC 321?
    - What do we learn in this course?
    - Why CSC 321?
    - Course structure

- topic: Getting started with Ruby
  abbrev: intro-ruby
  summary: We start to investigate some issues in Ruby.
  reading: 
    - /readings/ruby1
  subjects:
    - A brief introduction to Ruby
    - Some exercises

- topic: Ruby, continued
  abbrev: ruby-continued
  reading:
    - /readings/ruby2
  summary: We continue to investigate some issues in Ruby.
  subjects:
    - Reflections on exercises
    - Duck typing
    - Additional characteristics of Ruby
    - Meta discussion
    - Object-oriented programming in Ruby
    - Q&A

- topic: Getting started with Rails
  abbrev: rails-1
  summary: We start thinking about Rails and its infrastructure.
  subjects:
    - Model/View/Controller
    - An introduction to Rails
    - Guest lecture: Design
  reading:
    - /readings/saasbook4

- topic: More fun with Rails
  abbrev: rails-2
  summary: We experiment with some real Rails installations.
  subjects:
    - Installing Rails.
    - More MVC.
  reading:
    - /readings/saasbook2

- topic: An introduction to software engineering
  abbrev: intro-softeng
  summary: We consider three models of software engineering and delve more deeply into agile practices
  subjects:
    - Models of software engineering
    - Important agile practices
    - Why agile?
    - Why not agile?
  reading: 
    - /readings/saasbook1

- topic: "Key ideas - Software as a service and user stories"
  abbrev: key-ideas
  summary: "We consider two key ideas in software design (or at least this class's model of software design): a model of software in the cloud and a mechanism for understanding user requirements."
  read: SaaSbook 7.1-7.5; Stallman on SaaS
  reading: 
    - /readings/user-stories
  subjects:
    - Project work time
    - SaaS
    - User stories
    - Using user stories

- topic: Behavior-driven design (BDD) and Test-driven Development
  abbrev: bdd
  summary: We consider two key ideas in software development and testing, one of which emphasizes high-level functionality and one of which emphasizes procedure-level functionality.
  read: SaaSbook 7, 8
  reading: 
    - /readings/bdd-tdd
  subjects:
    - Behavior-driven design (BDD)
    - Cucumber basics
    - Test-driven development
    - Why test?
    - An example

- topic: Work Time
  abbrev: work-time
  read: 

- topic: Modeling basics
  abbrev: modeling-basics
  summary: We begin to consider issues of modeling data in general.
  subjects:
    - Modeling data
    - Strategies for "doing" modeling
    - An exercise in basic modeling
    - Exploring relationships between data
    - Extending our sample model

- topic: Modeling, continued
  abbrev: modeling-continued
  summary: We continue to consider issues of modeling data, in both Rails and in SQL.

- topic: Legacy code and the UML
  abbrev: legacy
  read: SaaSbook 9, 10.4-10.9; Wikipedia on UML; SaaSbook 11.2

- topic: Design patterns
  abbrev: design-patterns
  read: SaaSbook 11

- topic: Software design experiences
  abbrev: alums

- topic: Wrapup
  abbrev: wrapup

